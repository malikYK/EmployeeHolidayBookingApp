// <auto-generated />
using System;
using EmpHolidayBookingData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EmpHolidayBookingAppData.Migrations
{
    [DbContext(typeof(SouthwindContext))]
    partial class SouthwindContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("EmpHolidayBookingData.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("First_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EmpHolidayBookingData.Holiday", b =>
                {
                    b.Property<string>("HolidayId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HolidayType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HolidayId");

                    b.ToTable("Holidays");
                });

            modelBuilder.Entity("EmpHolidayBookingData.HolidayRequestLog", b =>
                {
                    b.Property<int>("HolidayRequestLogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HolidayId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ManagerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HolidayRequestLogID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("HolidayId");

                    b.HasIndex("ManagerID");

                    b.ToTable("HolidayRequestLogs");
                });

            modelBuilder.Entity("EmpHolidayBookingData.Manager", b =>
                {
                    b.Property<int>("ManagerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("First_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HolidayRequestLogID")
                        .HasColumnType("int");

                    b.Property<string>("Last_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ManagerID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("HolidayRequestLogID");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("EmpHolidayBookingData.HolidayRequestLog", b =>
                {
                    b.HasOne("EmpHolidayBookingData.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmpHolidayBookingData.Holiday", "Holiday")
                        .WithMany()
                        .HasForeignKey("HolidayId");

                    b.HasOne("EmpHolidayBookingData.Manager", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Holiday");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("EmpHolidayBookingData.Manager", b =>
                {
                    b.HasOne("EmpHolidayBookingData.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmpHolidayBookingData.HolidayRequestLog", null)
                        .WithMany("Managers")
                        .HasForeignKey("HolidayRequestLogID");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EmpHolidayBookingData.HolidayRequestLog", b =>
                {
                    b.Navigation("Managers");
                });
#pragma warning restore 612, 618
        }
    }
}
